name: Docker Build and K8s Minikube Deploy
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout code
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Run tests
        working-directory: ./frontend
        run: npm test -- --passWithNoTests
      - name: Run build
        working-directory: ./frontend
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: npm run build
    
  build-and-push:
    needs: [ build-and-deploy ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true 
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/dream-vacation-app-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/dream-vacation-app-frontend:${{ github.sha }}
      
      - name: Build and push with short SHA
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-5)
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dream-vacation-app-frontend:latest -t ${{ secrets.DOCKERHUB_USERNAME }}/dream-vacation-app-frontend:$SHORT_SHA frontend/
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dream-vacation-app-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dream-vacation-app-frontend:$SHORT_SHA
 
  deploy:
    needs: [ build-and-push ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Start Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker
          
      - name: Determine Namespace
        run: |
            if [[ $GITHUB_REF_NAME == 'develop' ]]; then
              NAMESPACE='dev'
            elif [[ $GITHUB_REF_NAME == 'main' ]]; then
              NAMESPACE='prod'
            else
              echo "Unknown branch, using default namespace 'default'"
              NAMESPACE='default'
            fi
            echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV
        
      - name: Create Namespace
        run: |
            if [ -z "$NAMESPACE" ]; then
              echo "Error: Namespace is not set."
              exit 1
            fi
            kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

    
      - name: Deploy Application
        run: |
          kubectl apply -f kubernetes-manifest/frontend/frontend-deployment.yml -n $NAMESPACE
          kubectl apply -f kubernetes-manifest/frontend/frontend-svc.yml -n $NAMESPACE
          # Wait for deployments
          kubectl rollout status deployment/dream-vacation-frontend-deploy -n $NAMESPACE --timeout=180s
          sleep 10
          
      - name: Get Minikube IP
        run: |
          echo "MINIKUBE_IP=$(minikube ip)" >> $GITHUB_ENV
          
      - name: Display Access URLs
        run: |
          NODE_PORT=$(kubectl get svc dream-vacation-frontend-svc -n "$NAMESPACE" -o=jsonpath='{.spec.ports[0].nodePort}')
          echo "Frontend URL: http://$MINIKUBE_IP:$NODE_PORT"
